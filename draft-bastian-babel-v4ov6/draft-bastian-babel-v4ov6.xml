<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" []>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc toc="yes"?>
<?rfc tocdepth="2"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes" ?>
<?rfc compact="no" ?>
<rfc category="exp" docName="draft-bastian-babel-v4ov6-00"
    ipr="trust200902"
    updates="6126">
<front>
<title abbrev="IPv4 routes with an IPv6 next-hop">
Announcing IPv4 routes with an IPv6 next-hop in the Babel routing protocol
</title>
<author fullname="Theophile Bastian" initials="T." surname="Bastian">
<organization>Ecole Normale Superieure, Paris</organization>
<address>
<postal>
<street></street>
<city></city>
<region></region>
<code></code>
<country>France</country>
</postal>
<email>theophile.bastian@ens.fr</email>
</address>
</author>
<author fullname="Juliusz Chroboczek" initials="J." surname="Chroboczek">
<organization>IRIF, University of Paris-Diderot</organization>
<address>
<postal>
<street>Case 7014</street>
<city>75205 Paris Cedex 13</city>
<region></region>
<code></code>
<country>France</country>
</postal>
<email>jch@irif.fr</email>
</address>
</author>

<date day="27" month="April" year="2020"/>

<abstract>
<t>This document defines an extension to the Babel routing protocol that
allows annoncing IPv4 packet with an IPv6 next-hop, which allows IPv4
traffic to flow through interfaces that have not been assigned an IPv4
address.</t>
</abstract>
</front>

<middle>

<section title="Introduction">

<t>Traditionally a routing table maps a network prefix of a given address
family to a next-hop address in the same address family.  The sole purpose
of this next-hop address is to serve as an input to a protocol that will
map it to a link-layer address (Neighbour Discovery (ND) in the case of
IPv6, Address Resolution (ARP) in the case of IPv4).  Therefore, there is
no reason why the address family of the next hop address should match that
of the prefix being announced: an IPv6 next-hop yields a link-layer
address that is suitable for forwarding both IPv6 or IPv4 traffic.</t>

<t>We call a route towards an IPv4 prefix that uses an IPv6 next hop
a "v4-over-v6" route.  Since an IPv6 next-hop can use a link-local address
that is autonomously configured, the use of v4-over-v6 routes enables
a mode of operation where the network core has no statically assigned IP
addresses of either family, thus significantly reducing the amount of
manual configuration.</t>

<t>This document describes an extension that allows the Babel routing
protocol <xref target="RFC6126bis"/> to announce routes towards IPv6 prefixes
with IPv4 next hops.  The extension has been inspired by a previously
defined extension to the BGP protocol <xref target="RFC5549"/>.</t>
</section>

<section title="Protocol operation">

<t>In the Babel protocol, both destination prefixes and next hops are
tagged with an Address Encoding (AE).  V4-over-v6 prefixes are announced
in a new AE and reuse the existing IPv6 next-hop.</t>

<section title="Announcing v4-over-v6 routes">

<t>A Babel speaker announces a v4-over-v6 route with an Update TLV, defined in
<xref target="RFC6126bis"/>, tagged with the v4-over-v6 AE. Its Prefix
field is an IPv4 address prefix. The route reuses the existing IPv6
next-hop.</t>

</section>

<section title="Receiving v4-over-v6 routes">

<t>Upon reception of an Update TLV with a v4-over-v6 AE, a Babel node running
on hardware and software that supports v4-over-v6 routes SHOULD proceed as for
the reception of an IPv4 or IPv6 route update, determining whether the route
should be installed locally according to the Babel protocol specification. If
the local hardware or software does not support v4-over-v6 routes, the route
SHOULD be silently ignored.</t>

<t>[Note: I am unclear with the first SHOULD above. What I want to say is that
the implementation is free to ignore the Update TLV if they want to, but if
they accept it, they MUST parse it according to the Babel protocol. Am I
overdoing it here?]</t>

<t>Should the route be installed, it [SHOULD|MUST ?] be installed as a
v4-over-v6 route.</t>

</section>

<section title="Prefix and seqno requests">

<t>The prefix and seqno requests bear a Prefix field, which is used to filter
the requested routes. This prefix is encoded as specified by the AE field, but
has no interaction whatsoever with the next-hop of the requested routes. Thus,
this extension has no impact on the behaviour of those TLVs. Specifically, the
answer to those requests SHOULD be entirely agnostic of whether the considered
locally-installed routes are v4-over-v6.</t>

<t>If a prefix request bears AE 0, requesting a full dump of its route table,
the v4-over-v6 routes, if any, should be included in the dump. [NOTE:
technically useless, the last sentence of last paragraph already says this. Is
this paragraph useful as a clarification or should it be removed?]</t>

<t>If a prefix or seqno request bears the v4-over-v6 AE, the Prefix field
should be parsed according to this AE, and the request should be dealt with
using this parsed prefix, regardless of the AE.</t>

</section>

</section>

<section title="Backwards compatibility">

<t>This protocol extension adds no new TLVs or sub-TLVs.</t>

<t>This protocol extension uses a new AE. As discussed in Appendix&nbsp;D of
<xref target="RFC6126bis"/> and specified in the same document, implementations
that do not understand the present extension will silently ignore the various
TLVs that use this new AE.</t>

<t>Using a new AE introduces a new compression state, used to parse the
network prefixes. As this compression state is separated from other AEs'
states, it will not interfere with the operation of the Babel protocol
outside the scope of the present extension.</t>

<t>This extension reuses the next-hop state from AEs 2 and 3 (IPv6), but
does so in a read-only fashion, causing no compatibility issues.</t>

<t>[TODO specify that a node should not send a v4-over-v6 route over
an interface without a matching pure-v4 route if the interface
supports IPv4? If not, the peer router could not support this
extension and ignore the route.]</t>

</section>

<section title="Protocol encoding">

<t>This extension defines the v4-over-v6 AE, whose value is 4. It defines no
new TLVs or sub-TLVs.</t>

<section title="Address encoding" anchor="address-encoding">
<t>The address encoding for AE 4 (v4-over-v6) is similar to that of
AE 1 (IPv4 address). Compression is allowed. 4 octets or less.
IPv4 address family.</t>

<t>A compression state distinct from that of AE 1 (IPv4) is introduced, and
MUST be used to (de)compress prefixes tagged with the AE 4.</t>

</section>

<section title="Changes for existing TLVs">
<t>The new v4-over-v6 AE can be used, unless stated otherwise in a further
protocol extension, exclusively within the following previously
existing Babel TLVs :

<list style="symbols">
<t>Update (Type = 8)</t>
<t>Route Request (Type = 9)</t>
<t>Seqno Request (Type = 10)</t>
</list>
</t>

<t>This AE value MUST NOT be used in any other TLV. Any other TLV tagged with
AE 4 SHOULD be silently ignored. Specifically, it must not be used within the
Next Hop TLV.</t>

<section title="Update">

<t>An Update (Type = 8) TLV with AE = 4 has the same behaviour as an Update
with AE = 1, with only the following differences.

<list style="symbols">

<t>Prefix compression. The Prefix field is parsed according to the
<xref target="address-encoding"/> above.</t>

<t>Next Hop. The next hop is determined exactly as the next hop for AEs 2 and 3
is, as defined in <xref target="RFC6126bis"/>. Specifically, if the packet
bears a previous IPv6 Next-hop TLV (AE = 2 or 3), it is used as a next hop for
this route. If no such address can be determined, this TLV MUST be silently
ignored.</t>

</list>
</t>

</section>

<!--
<section title="Route Request">

</section>

<section title="Seqno Request">
<t>TODO</t>
</section>
-->

<section title="Other valid TLVs tagged with AE = 4">

<t>Any other valid TLV tagged with AE = 4 MUST be decoded as specified by the
Babel specification, referring to the <xref target="address-encoding"/> above
to parse network addresses or prefixes within.</t>

</section>

</section>
</section>

<section title="IANA Considerations">

<t>IANA is instructed to add the following entry to the "Babel Address
Encodings" registry:</t>

<texttable>
<ttcol>AE</ttcol><ttcol>Name</ttcol><ttcol>Reference</ttcol>
<c>4</c><c>v4-over-v6</c><c>(this document)</c>
</texttable>

</section>
 
<section title="Security Considerations">

<t>This extension does not fundamentally change the security properties of
the Babel protocol: as described in Section 6 of <xref target="RFC6126bis"/>,
Babel must be protected by a suitable cryptographic mechanism in order to
be made secure.</t>

<t>However, enabling this extension will allow IPv4 traffic to flow
through sections of a network that have not been assigned IPv4 addresses,
which, in turn, might allow IPv4 traffic to reach areas of the network
that were previously inaccessible to such traffic.  If this is
undesirable, the flow of IPv4 traffic must be restricted by the use of
suitable filtering rules (Appendix C of <xref target="RFC6126bis"/>)
together with matching access control rules in the data plane.</t>

</section>

</middle>

<back>

<references title="Normative References">

<reference anchor='RFC6126bis'><front>
<title>The Babel Routing Protocol</title>
<author initials='J' surname='Chroboczek' fullname='Juliusz Chroboczek'/>
<author initials='D' surname='Schinazi' fullname='David Schinazi'/>
<date month='February' day='6' year='2020' />
</front>
<seriesInfo name='Internet-Draft' value='draft-ietf-babel-rfc6126bis-17'/>
</reference>

</references>

<references title="Informative References">

<reference anchor="RFC5549">
<front>
<title>
Advertising IPv4 Network Layer Reachability Information with an IPv6 Next Hop
</title>
<author initials="F." surname="Le Faucheur" fullname="F. Le Faucheur"/>
<author initials="E." surname="Rosen" fullname="E. Rosen"/>
<date year="2009" month="May"/>
</front>
<seriesInfo name="RFC" value="5549"/>
<seriesInfo name="DOI" value="10.17487/RFC5549"/>
</reference>

</references>
</back>
</rfc>
